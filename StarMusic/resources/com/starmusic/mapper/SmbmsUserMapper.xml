<?xml version="1.0" encoding="UTF-8"?>  
<!DOCTYPE mapper  
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">  
  
<mapper namespace="com.lrd.dao.SmbmsUserDao">  
    <insert id="save" parameterType="SmbmsUser" >
		INSERT INTO `smbms`.`smbms_user`
			 (`id`, `userCode`, `userName`,
			  `userPassword`, `gender`, 
			  `birthday`, `phone`, `address`, 
			  `userRole`, `createdBy`, `creationDate`,
			   `modifyBy`, `modifyDate`, `idPicPath`, 
			   `idWebPath`) 
		VALUES 
			(default, #{userCode}, #{userName}, 
			#{userPassword}, #{gender}, #{birthday}, 
			#{phone}, #{address}, #{userRole}, #{createdBy},
			 #{creationDate}, #{modifyBy}, #{modifyDate}, #{idPicPath},#{workPicPath})
	</insert>
	<update id="update" parameterType="SmbmsUser">
		UPDATE `smbms`.`smbms_user` 
		<trim prefix="set" suffixOverrides="," >
			<if test="userCode != null">`userCode`=#{userCode}, </if>
			<if test="userName != null">`userName`=#{userName}, </if>
			<if test="userPassword != null">`userPassword`=#{userPassword}, </if>
			<if test="gender != null">`gender`=#{gender}, </if>
			<if test="birthday != null">`birthday`=#{birthday}, </if>
			<if test="phone != null">`phone`=#{phone}, </if>
			<if test="address != null">`address`=#{address}, </if>
			<if test="userRole != null">`userRole`=#{userRole},</if>
			<if test="createdBy != null">`createdBy`=#{createdBy}, </if>
			<if test="creationDate != null">`creationDate`=#{creationDate}, </if>
			<if test="modifyBy != null">`modifyBy`=#{modifyBy}, </if>
			<if test="modifyDate != null">`modifyDate`=#{modifyDate}, </if>
			<if test="idPicPath != null">`idPicPath`=#{idPicPath}, </if>
			<if test="workPicPath != null">`workPicPath`=#{workPicPath}, </if>
		</trim>
		WHERE (`id`=#{id});
	</update>
    <delete id="delete" parameterType="int">
		delete from smbms_user where id = #{id}
	</delete>
	<delete id="deleteByRoleId" parameterType="int">
		delete from smbms_user where userRole = #{roleId}
	</delete>
	
	<select id="getUserCountByRoleId" resultType="int" parameterType="int">
		select count(*) from smbms_user where userRole = #{roleId}
	</select>
	
	<sql id="findUser">
		select 
    		su.*,sr.id roleId,sr.roleCode,sr.roleName,
    		sr.createdBy roleCreatedBy,sr.creationDate roleCreationDate,
    		sr.modifyBy roleModifyBy,sr.modifyDate roleModifyDate 
    	from 
    		smbms_user su join smbms_role sr on su.userRole = sr.id
	</sql>
    <select id="find" resultMap="resultMapSmbmsUser">
    	<include refid="findUser"/>
    	<where>
        	<if test="user.userName != null"> and userName like concat('%',#{user.userName},'%')</if>
        	<if test="user.userRole != null"> and userRole = #{user.userRole}</if>
        </where>
        <if test="pageIndex != null and pageSize!=null">
         	limit #{pageIndex},#{pageSize}
        </if>
    </select>
    <select id="getUserCount" resultType="int" parameterType="int">
		select count(*) from smbms_user 
		<where>
			<if test="userCode != null"> and userCode = #{userCode}</if>
        	<if test="userName != null"> and userName like concat('%',#{userName},'%')</if>
        	<if test="userRole != null and userRole!=0"> and userRole = #{userRole}</if>
        	<if test="userPassword != null">and `userPassword`=#{userPassword} </if>
        	<if test="id != null">and `id`=#{id} </if>
        </where>
	</select>
    <select id="login" resultMap="resultMapSmbmsUser" parameterType="SmbmsUser">  
        <include refid="findUser" />
        <where>
			<if test="userCode != null"> and userCode = #{userCode}</if>
        	<if test="userPassword != null"> and userPassword = #{userPassword}</if>
        	<if test="id != null"> and su.id = #{id}</if>
        </where>
    </select>
    
    <resultMap type="SmbmsUser" id="resultMapSmbmsUser">
    	<id property="id" column="id" />
    	<association property="role" resultMap="resultMapSmbmsRole" />
    </resultMap>
    <resultMap type="SmbmsRole" id="resultMapSmbmsRole">
    	<id property="id" column="roleId" />
   		<result property="createBy" column="roleCreatedBy" />
   		<result property="creationDate" column="roleCreationDate" />
   		<result property="modifyBy" column="roleModifyBy" />
   		<result property="modifyDate" column="roleModifyDate" />
    </resultMap>
</mapper>